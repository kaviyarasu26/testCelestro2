{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef((_ref, fref) => {\n  let {\n    children,\n    material = MeshLambertMaterial,\n    texture = CLOUD_URL,\n    range,\n    limit = 200,\n    frustumCulled,\n    ...props\n  } = _ref;\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float cloudOpacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = cloudOpacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.cloudOpacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.cloudOpacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  const max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-cloudOpacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef((_ref2, fref) => {\n  let {\n    opacity = 1,\n    speed = 0,\n    bounds = [5, 1, 1],\n    segments = 20,\n    color = '#ffffff',\n    fade = 10,\n    volume = 6,\n    smallestVolume = 0.25,\n    distribute = null,\n    growth = 4,\n    concentrate = 'inside',\n    seed = Math.random(),\n    ...props\n  } = _ref2;\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const [uuid] = React.useState(() => v4());\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) {\n        var _distributed$point;\n        cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n          x: random() * 2 - 1,\n          y: random() * 2 - 1,\n          z: random() * 2 - 1\n        });\n      }\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));\n  return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\nexport { Cloud, CloudInstance, Clouds };","map":{"version":3,"names":["_extends","React","REVISION","Quaternion","Vector3","DynamicDrawUsage","MeshLambertMaterial","Matrix4","Color","extend","useFrame","applyProps","useTexture","v4","setUpdateRange","CLOUD_URL","parentMatrix","translation","rotation","cpos","cquat","scale","context","createContext","Clouds","forwardRef","_ref","fref","children","material","texture","range","limit","frustumCulled","props","_image$width","_image$height","CloudMaterial","useMemo","constructor","opaque_fragment","parseInt","replace","onBeforeCompile","shader","vertexShader","fragmentShader","instance","useRef","clouds","opacities","Float32Array","Array","from","length","colors","flat","cloudTexture","t","index","config","qat","dir","pos","state","delta","clock","getElapsedTime","copy","current","matrixWorld","invert","camera","decompose","ref","add","position","applyQuaternion","multiply","setFromAxisAngle","rotationFactor","multiplyScalar","volume","Math","sin","density","speed","growth","matrix","compose","premultiply","dist","distanceTo","sort","a","b","opacity","fade","setMatrixAt","setColorAt","color","geometry","attributes","cloudOpacity","needsUpdate","instanceMatrix","instanceColor","useLayoutEffect","count","min","undefined","offset","imageBounds","image","width","height","max","createElement","Provider","value","matrixAutoUpdate","args","usage","attach","key","name","map","transparent","depthWrite","CloudInstance","_ref2","bounds","segments","smallestVolume","distribute","concentrate","seed","random","x","floor","parent","useContext","uuid","useState","_","PI","forEach","cloud","distributed","_distributed$point","point","y","z","xDiff","abs","yDiff","zDiff","temp","filter","item","useImperativeHandle","Cloud"],"sources":["C:/Users/adhil/Downloads/celestro/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float cloudOpacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = cloudOpacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.cloudOpacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.cloudOpacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  const max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-cloudOpacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const [uuid] = React.useState(() => v4());\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) {\n        var _distributed$point;\n        cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n          x: random() * 2 - 1,\n          y: random() * 2 - 1,\n          z: random() * 2 - 1\n        });\n      }\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));\n  return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\n\nexport { Cloud, CloudInstance, Clouds };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}